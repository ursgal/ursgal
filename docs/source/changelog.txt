Changelog
=========

Version 0.6.2    (09.2018)
^^^^^^^^^^^^^^^^^^^^^^^^^^
#. MSFragger version 20171106 was implemented
#. MODa v1.61 was implemented
#. PIPI version 1.4.5 replaced PIPI 1.3 due to compatibility issues with PIPI 1.3
#. PIPI version 1.4.6 implemented (thanks Fengchao)
#. Added latest versions of MSGF+ (version 2018.06.28 and 2018.09.12) 
   and new python mzid to csv converte msgfplus2csv_py_v1_0_0
#. Macot wrapper and converter was implemented to allow downstream processing
   of Mascot results
#. Some minor bugfixes and added functionality (check git log for details)


Version 0.6.1    (03.2018)
^^^^^^^^^^^^^^^^^^^^^^^^^^
#. Improved compaitibility to pymzML generation 2 and splitted up the mzML to 
   mgf converter in version 1.0.0 (pymzML 0.7.9) and 2.0.0 (pymzML 2.0.2).
   The version of installed pymzML is now automatically determined and the
   corresponding converter version is used.
#. Added latest versions of MSGF+ (version 2018.01.20) and the corresponding C 
   based mzidentML converter (version 1.2.0 and 1.2.1)
#. Several new engine versions were made avaliable via the install_resources
   script.
#. Some general code cleanup was done


Version 0.6.0    (01.2018)
^^^^^^^^^^^^^^^^^^^^^^^^^^
#. Restructuring of engine classes. SEARCH_ENGINE(s) are now devided into
   * CROSS_LINK_SEARCH_ENGINE(s)
   * DE_NOVO_SEARCH_ENGINE(s)
   * PROTEIN_DATABASE_SEARCH_ENGINE(s)
   * SPECTRAL_LIBRARY_SEARCH_ENGINE(s)
   The META_INFO of corresponding engines has been changed accordingly.
   Furthermore, CONVERTER(s) have been split into CONVERTER(s) and MISC_ENGINE(s)
#. Restructuring of UController functions. Unified functions for all engines
   of one engine class (Converter, Search_Engines, Validation_Engines, etc)
   are now available. Function names for each engine class are stored in
   ukb.ENGINE_TYPES and ukb.UCONTROLLER_FUNCTIONS
#. ursgal_kb.py has been renamed to ukb.py
#. Implemented the following open modification search engines 
   (as protein database search engines): MSFragger, PIPI, ModA
#. Smaller fixes and improvements (please check git log)


Version 0.5.0    (04.2017)
^^^^^^^^^^^^^^^^^^^^^^^^^^

#. New branch: upapa_v3. This branch will soon be merged into the master after
   rigid testing and evaluation.
#. New improved peptide mapper version in terms of RAM usage and speed. Peptide
   mapping is now a standalone unode. Classes for mapping can be imported from
   anywhere from the undoe. Input for standalone node is a not-unified csv file.
   Branch: upapa_v3
#. Unify csv is now placed after the upeptide_mapper node if a database search
   engine (e.g. OMSSA, X!Tandem etc.) is used.
   Branch: upapa_v3
#. Unify csv was adjusted to meet the new requirements of the separated peptide
   mapping node. Please also note, that the default behaviour of remapping
   amino acid 'U' to 'C' is not longer performed.
#. Unify csv now reports if the peptide fulfills the enzyme cleavage parameters,
   like number of missed cleavages and if the C and N terminus is correct.
   Column name: 'Complies search criteria'
#. Test script update
#. Documentation update
#. Implementation of a customizable SVM for PSM post-processing
#. Smaller fixes and improvements (please check git log)


Version 0.4.0rc1 (05.2016)
^^^^^^^^^^^^^^^^^^^^^^^^^^

#. included a upeptide_mapper for fast peptide to sequence mapping.
#. renamed engine folder to wrappers
#. combined all files from the kb folder into one single file, **uparams.py**
   which is parsed during unode initialization. Advantage is to see all params
   grouped together.
#. Added more information to the unique parameters, such as description and
   default value types.
#. Included script to auto-generate documentation from uparams file.
#. Updated documentation to reflect the changes above.


Version 0.3.4 (02.2016)
^^^^^^^^^^^^^^^^^^^^^^^

#. Implementation of de novo search engines: Novor, PepNovo
#. X!Tandem version Vengeance included
